/**
*
*Copyright 2010 Microsoft Corp
*
*Licensed under the Apache License, Version 2.0 (the "License");
*you may not use this file except in compliance with the License.
*You may obtain a copy of the License at
*
*http://www.apache.org/licenses/LICENSE-2.0
*
*Unless required by applicable law or agreed to in writing, software
*distributed under the License is distributed on an "AS IS" BASIS,
*WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*See the License for the specific language governing permissions and
*limitations under the License.
*/
/**
* This code was generated by the tool 'odatagen'.
* Runtime Version:1.0
*
* Changes to this file may cause incorrect behavior and will be lost if
* the code is regenerated.
*/
/**
* Defines default Data Service URL for this proxy class
*/
#define DEFAULT_SERVICE_URL @""


#define DataServiceVersion @"2.0"

#import "MSODataLib/ODataObject.h"
#import "MSODataLib/ODataDeletedObject.h"
#import "MSODataLib/ObjectContext.h"
#import "MSODataLib/DataServiceQuery.h"
#import "MSODataLib/ODataGUID.h"
#import "MSODataLib/ODataBool.h"
#import "MSODataLib/mProperties.h"


/**
 * @interface:Badge
 * @Type:EntityType
 
 * @key:Id* 
 */
@interface MetaModel_Badge : ODataObject
{
	
	/**
	* @Type:EntityProperty
	* NotNullable
	* @EdmType:Edm.Int32
	*/
	NSNumber *m_Id;
	
	/**
	* @Type:EntityProperty
	* @EdmType:Edm.Int32
	*/
	NSNumber *m_UserId;
	
	/**
	* @Type:EntityProperty
	* @EdmType:Edm.String
	* @MaxLength:50
	* @FixedLength:false
	*/
	NSString *m_Name;
	
	/**
	* @Type:EntityProperty
	* @EdmType:Edm.DateTime
	*/
	NSDate *m_Date;
	
	/**
	* @Type:NavigationProperty
	* @Relationship:BadgeUser
	* @FromRole:Badge
	* @ToRole:User
	*/
	NSMutableArray *m_User;
	
}

@property ( nonatomic , retain , getter=getId , setter=setId )NSNumber *m_Id;
@property ( nonatomic , retain , getter=getUserId , setter=setUserId )NSNumber *m_UserId;
@property ( nonatomic , retain , getter=getName , setter=setName ) NSString *m_Name;
@property ( nonatomic , retain , getter=getDate , setter=setDate )NSDate *m_Date;
@property ( nonatomic , retain , getter=getUser , setter=setUser )NSMutableArray *m_User;

+ (id) CreateBadgeWithid:(NSNumber *)aId;
- (id) init;
- (id) initWithUri:(NSString*)anUri;
@end


 /**
 * @interface:Badge
 * @Type:EntityType
 
 */
@interface MetaModel_DeletedBadge : ODataDeletedObject{
	
}

- (id) init;
- (id) initWithUri:(NSString*)anUri;
@end

/**
 * @interface:Comment
 * @Type:EntityType
 
 * @key:Id* 
 */
@interface MetaModel_Comment : ODataObject
{
	
	/**
	* @Type:EntityProperty
	* NotNullable
	* @EdmType:Edm.Int32
	*/
	NSNumber *m_Id;
	
	/**
	* @Type:EntityProperty
	* @EdmType:Edm.Int32
	*/
	NSNumber *m_PostId;
	
	/**
	* @Type:EntityProperty
	* @EdmType:Edm.Int32
	*/
	NSNumber *m_Score;
	
	/**
	* @Type:EntityProperty
	* @EdmType:Edm.String
	* @MaxLength:Max
	* @FixedLength:false
	*/
	NSString *m_Text;
	
	/**
	* @Type:EntityProperty
	* @EdmType:Edm.DateTime
	*/
	NSDate *m_CreationDate;
	
	/**
	* @Type:EntityProperty
	* @EdmType:Edm.Int32
	*/
	NSNumber *m_UserId;
	
	/**
	* @Type:NavigationProperty
	* @Relationship:CommentPost
	* @FromRole:Comment
	* @ToRole:Post
	*/
	NSMutableArray *m_Post;
	
	/**
	* @Type:NavigationProperty
	* @Relationship:CommentUser
	* @FromRole:Comment
	* @ToRole:User
	*/
	NSMutableArray *m_User;
	
}

@property ( nonatomic , retain , getter=getId , setter=setId )NSNumber *m_Id;
@property ( nonatomic , retain , getter=getPostId , setter=setPostId )NSNumber *m_PostId;
@property ( nonatomic , retain , getter=getScore , setter=setScore )NSNumber *m_Score;
@property ( nonatomic , retain , getter=getText , setter=setText ) NSString *m_Text;
@property ( nonatomic , retain , getter=getCreationDate , setter=setCreationDate )NSDate *m_CreationDate;
@property ( nonatomic , retain , getter=getUserId , setter=setUserId )NSNumber *m_UserId;
@property ( nonatomic , retain , getter=getPost , setter=setPost )NSMutableArray *m_Post;
@property ( nonatomic , retain , getter=getUser , setter=setUser )NSMutableArray *m_User;

+ (id) CreateCommentWithid:(NSNumber *)aId;
- (id) init;
- (id) initWithUri:(NSString*)anUri;
@end


 /**
 * @interface:Comment
 * @Type:EntityType
 
 */
@interface MetaModel_DeletedComment : ODataDeletedObject{
	
}

- (id) init;
- (id) initWithUri:(NSString*)anUri;
@end

/**
 * @interface:Post
 * @Type:EntityType
 
 * @key:Id* 
 */
@interface MetaModel_Post : ODataObject
{
	
	/**
	* @Type:EntityProperty
	* NotNullable
	* @EdmType:Edm.Int32
	*/
	NSNumber *m_Id;
	
	/**
	* @Type:EntityProperty
	* @EdmType:Edm.Byte
	*/
	Byte m_PostTypeId;
	
	/**
	* @Type:EntityProperty
	* @EdmType:Edm.Int32
	*/
	NSNumber *m_AcceptedAnswerId;
	
	/**
	* @Type:EntityProperty
	* @EdmType:Edm.DateTime
	*/
	NSDate *m_CreationDate;
	
	/**
	* @Type:EntityProperty
	* @EdmType:Edm.Int32
	*/
	NSNumber *m_Score;
	
	/**
	* @Type:EntityProperty
	* @EdmType:Edm.Int32
	*/
	NSNumber *m_ViewCount;
	
	/**
	* @Type:EntityProperty
	* @EdmType:Edm.String
	* @MaxLength:Max
	* @FixedLength:false
	*/
	NSString *m_Body;
	
	/**
	* @Type:EntityProperty
	* @EdmType:Edm.Int32
	*/
	NSNumber *m_OwnerUserId;
	
	/**
	* @Type:EntityProperty
	* @EdmType:Edm.Int32
	*/
	NSNumber *m_LastEditorUserId;
	
	/**
	* @Type:EntityProperty
	* @EdmType:Edm.DateTime
	*/
	NSDate *m_LastEditDate;
	
	/**
	* @Type:EntityProperty
	* @EdmType:Edm.DateTime
	*/
	NSDate *m_LastActivityDate;
	
	/**
	* @Type:EntityProperty
	* @EdmType:Edm.String
	* @MaxLength:250
	* @FixedLength:false
	*/
	NSString *m_Title;
	
	/**
	* @Type:EntityProperty
	* @EdmType:Edm.String
	* @MaxLength:150
	* @FixedLength:false
	*/
	NSString *m_Tags;
	
	/**
	* @Type:EntityProperty
	* @EdmType:Edm.Int32
	*/
	NSNumber *m_AnswerCount;
	
	/**
	* @Type:EntityProperty
	* @EdmType:Edm.Int32
	*/
	NSNumber *m_CommentCount;
	
	/**
	* @Type:EntityProperty
	* @EdmType:Edm.Int32
	*/
	NSNumber *m_FavoriteCount;
	
	/**
	* @Type:EntityProperty
	* @EdmType:Edm.DateTime
	*/
	NSDate *m_ClosedDate;
	
	/**
	* @Type:EntityProperty
	* @EdmType:Edm.Int32
	*/
	NSNumber *m_ParentId;
	
	/**
	* @Type:EntityProperty
	* @EdmType:Edm.DateTime
	*/
	NSDate *m_CommunityOwnedDate;
	
	/**
	* @Type:NavigationProperty
	* @Relationship:CommentPost
	* @FromRole:Post
	* @ToRole:Comment
	*/
	NSMutableArray *m_Comments;
	
	/**
	* @Type:NavigationProperty
	* @Relationship:PostPost
	* @FromRole:Post
	* @ToRole:Post1
	*/
	NSMutableArray *m_Children;
	
	/**
	* @Type:NavigationProperty
	* @Relationship:PostPost
	* @FromRole:Post1
	* @ToRole:Post
	*/
	NSMutableArray *m_Parent;
	
}

@property ( nonatomic , retain , getter=getId , setter=setId )NSNumber *m_Id;
@property ( nonatomic , assign , getter=getPostTypeId , setter=setPostTypeId )Byte m_PostTypeId;
@property ( nonatomic , retain , getter=getAcceptedAnswerId , setter=setAcceptedAnswerId )NSNumber *m_AcceptedAnswerId;
@property ( nonatomic , retain , getter=getCreationDate , setter=setCreationDate )NSDate *m_CreationDate;
@property ( nonatomic , retain , getter=getScore , setter=setScore )NSNumber *m_Score;
@property ( nonatomic , retain , getter=getViewCount , setter=setViewCount )NSNumber *m_ViewCount;
@property ( nonatomic , retain , getter=getBody , setter=setBody ) NSString *m_Body;
@property ( nonatomic , retain , getter=getOwnerUserId , setter=setOwnerUserId )NSNumber *m_OwnerUserId;
@property ( nonatomic , retain , getter=getLastEditorUserId , setter=setLastEditorUserId )NSNumber *m_LastEditorUserId;
@property ( nonatomic , retain , getter=getLastEditDate , setter=setLastEditDate )NSDate *m_LastEditDate;
@property ( nonatomic , retain , getter=getLastActivityDate , setter=setLastActivityDate )NSDate *m_LastActivityDate;
@property ( nonatomic , retain , getter=getTitle , setter=setTitle ) NSString *m_Title;
@property ( nonatomic , retain , getter=getTags , setter=setTags ) NSString *m_Tags;
@property ( nonatomic , retain , getter=getAnswerCount , setter=setAnswerCount )NSNumber *m_AnswerCount;
@property ( nonatomic , retain , getter=getCommentCount , setter=setCommentCount )NSNumber *m_CommentCount;
@property ( nonatomic , retain , getter=getFavoriteCount , setter=setFavoriteCount )NSNumber *m_FavoriteCount;
@property ( nonatomic , retain , getter=getClosedDate , setter=setClosedDate )NSDate *m_ClosedDate;
@property ( nonatomic , retain , getter=getParentId , setter=setParentId )NSNumber *m_ParentId;
@property ( nonatomic , retain , getter=getCommunityOwnedDate , setter=setCommunityOwnedDate )NSDate *m_CommunityOwnedDate;
@property ( nonatomic , retain , getter=getComments , setter=setComments )NSMutableArray *m_Comments;
@property ( nonatomic , retain , getter=getChildren , setter=setChildren )NSMutableArray *m_Children;
@property ( nonatomic , retain , getter=getParent , setter=setParent )NSMutableArray *m_Parent;

+ (id) CreatePostWithid:(NSNumber *)aId;
- (id) init;
- (id) initWithUri:(NSString*)anUri;
@end


 /**
 * @interface:Post
 * @Type:EntityType
 
 */
@interface MetaModel_DeletedPost : ODataDeletedObject{
	
}

- (id) init;
- (id) initWithUri:(NSString*)anUri;
@end

/**
 * @interface:Tag
 * @Type:EntityType
 
 * @key:Id* 
 */
@interface MetaModel_Tag : ODataObject
{
	
	/**
	* @Type:EntityProperty
	* NotNullable
	* @EdmType:Edm.Int32
	*/
	NSNumber *m_Id;
	
	/**
	* @Type:EntityProperty
	* @EdmType:Edm.String
	* @MaxLength:255
	* @FixedLength:false
	*/
	NSString *m_TagName;
	
}

@property ( nonatomic , retain , getter=getId , setter=setId )NSNumber *m_Id;
@property ( nonatomic , retain , getter=getTagName , setter=setTagName ) NSString *m_TagName;

+ (id) CreateTagWithid:(NSNumber *)aId;
- (id) init;
- (id) initWithUri:(NSString*)anUri;
@end


 /**
 * @interface:Tag
 * @Type:EntityType
 
 */
@interface MetaModel_DeletedTag : ODataDeletedObject{
	
}

- (id) init;
- (id) initWithUri:(NSString*)anUri;
@end

/**
 * @interface:User
 * @Type:EntityType
 
 * @key:Id* 
 */
@interface MetaModel_User : ODataObject
{
	
	/**
	* @Type:EntityProperty
	* NotNullable
	* @EdmType:Edm.Int32
	*/
	NSNumber *m_Id;
	
	/**
	* @Type:EntityProperty
	* @EdmType:Edm.Int32
	*/
	NSNumber *m_Reputation;
	
	/**
	* @Type:EntityProperty
	* @EdmType:Edm.String
	* @MaxLength:40
	* @FixedLength:false
	*/
	NSString *m_EmailHash;
	
	/**
	* @Type:EntityProperty
	* @EdmType:Edm.DateTime
	*/
	NSDate *m_CreationDate;
	
	/**
	* @Type:EntityProperty
	* @EdmType:Edm.String
	* @MaxLength:40
	* @FixedLength:false
	*/
	NSString *m_DisplayName;
	
	/**
	* @Type:EntityProperty
	* @EdmType:Edm.DateTime
	*/
	NSDate *m_LastAccessDate;
	
	/**
	* @Type:EntityProperty
	* @EdmType:Edm.String
	* @MaxLength:200
	* @FixedLength:false
	*/
	NSString *m_WebsiteUrl;
	
	/**
	* @Type:EntityProperty
	* @EdmType:Edm.String
	* @MaxLength:100
	* @FixedLength:false
	*/
	NSString *m_Location;
	
	/**
	* @Type:EntityProperty
	* @EdmType:Edm.Int32
	*/
	NSNumber *m_Age;
	
	/**
	* @Type:EntityProperty
	* @EdmType:Edm.String
	* @MaxLength:Max
	* @FixedLength:false
	*/
	NSString *m_AboutMe;
	
	/**
	* @Type:EntityProperty
	* @EdmType:Edm.Int32
	*/
	NSNumber *m_Views;
	
	/**
	* @Type:EntityProperty
	* @EdmType:Edm.Int32
	*/
	NSNumber *m_UpVotes;
	
	/**
	* @Type:EntityProperty
	* @EdmType:Edm.Int32
	*/
	NSNumber *m_DownVotes;
	
	/**
	* @Type:NavigationProperty
	* @Relationship:BadgeUser
	* @FromRole:User
	* @ToRole:Badge
	*/
	NSMutableArray *m_Badges;
	
	/**
	* @Type:NavigationProperty
	* @Relationship:CommentUser
	* @FromRole:User
	* @ToRole:Comment
	*/
	NSMutableArray *m_Comments;
	
}

@property ( nonatomic , retain , getter=getId , setter=setId )NSNumber *m_Id;
@property ( nonatomic , retain , getter=getReputation , setter=setReputation )NSNumber *m_Reputation;
@property ( nonatomic , retain , getter=getEmailHash , setter=setEmailHash ) NSString *m_EmailHash;
@property ( nonatomic , retain , getter=getCreationDate , setter=setCreationDate )NSDate *m_CreationDate;
@property ( nonatomic , retain , getter=getDisplayName , setter=setDisplayName ) NSString *m_DisplayName;
@property ( nonatomic , retain , getter=getLastAccessDate , setter=setLastAccessDate )NSDate *m_LastAccessDate;
@property ( nonatomic , retain , getter=getWebsiteUrl , setter=setWebsiteUrl ) NSString *m_WebsiteUrl;
@property ( nonatomic , retain , getter=getLocation , setter=setLocation ) NSString *m_Location;
@property ( nonatomic , retain , getter=getAge , setter=setAge )NSNumber *m_Age;
@property ( nonatomic , retain , getter=getAboutMe , setter=setAboutMe ) NSString *m_AboutMe;
@property ( nonatomic , retain , getter=getViews , setter=setViews )NSNumber *m_Views;
@property ( nonatomic , retain , getter=getUpVotes , setter=setUpVotes )NSNumber *m_UpVotes;
@property ( nonatomic , retain , getter=getDownVotes , setter=setDownVotes )NSNumber *m_DownVotes;
@property ( nonatomic , retain , getter=getBadges , setter=setBadges )NSMutableArray *m_Badges;
@property ( nonatomic , retain , getter=getComments , setter=setComments )NSMutableArray *m_Comments;

+ (id) CreateUserWithid:(NSNumber *)aId;
- (id) init;
- (id) initWithUri:(NSString*)anUri;
@end


 /**
 * @interface:User
 * @Type:EntityType
 
 */
@interface MetaModel_DeletedUser : ODataDeletedObject{
	
}

- (id) init;
- (id) initWithUri:(NSString*)anUri;
@end

/**
 * @interface:Vote
 * @Type:EntityType
 
 * @key:Id* 
 */
@interface MetaModel_Vote : ODataObject
{
	
	/**
	* @Type:EntityProperty
	* NotNullable
	* @EdmType:Edm.Int32
	*/
	NSNumber *m_Id;
	
	/**
	* @Type:EntityProperty
	* @EdmType:Edm.Int32
	*/
	NSNumber *m_PostId;
	
	/**
	* @Type:EntityProperty
	* @EdmType:Edm.Int32
	*/
	NSNumber *m_VoteTypeId;
	
	/**
	* @Type:EntityProperty
	* @EdmType:Edm.DateTime
	*/
	NSDate *m_CreationDate;
	
	/**
	* @Type:EntityProperty
	* @EdmType:Edm.Int32
	*/
	NSNumber *m_BountyAmount;
	
	/**
	* @Type:EntityProperty
	* @EdmType:Edm.Int32
	*/
	NSNumber *m_UserId;
	
	/**
	* @Type:NavigationProperty
	* @Relationship:VoteVoteType
	* @FromRole:Vote
	* @ToRole:VoteType
	*/
	NSMutableArray *m_VoteType;
	
}

@property ( nonatomic , retain , getter=getId , setter=setId )NSNumber *m_Id;
@property ( nonatomic , retain , getter=getPostId , setter=setPostId )NSNumber *m_PostId;
@property ( nonatomic , retain , getter=getVoteTypeId , setter=setVoteTypeId )NSNumber *m_VoteTypeId;
@property ( nonatomic , retain , getter=getCreationDate , setter=setCreationDate )NSDate *m_CreationDate;
@property ( nonatomic , retain , getter=getBountyAmount , setter=setBountyAmount )NSNumber *m_BountyAmount;
@property ( nonatomic , retain , getter=getUserId , setter=setUserId )NSNumber *m_UserId;
@property ( nonatomic , retain , getter=getVoteType , setter=setVoteType )NSMutableArray *m_VoteType;

+ (id) CreateVoteWithid:(NSNumber *)aId;
- (id) init;
- (id) initWithUri:(NSString*)anUri;
@end


 /**
 * @interface:Vote
 * @Type:EntityType
 
 */
@interface MetaModel_DeletedVote : ODataDeletedObject{
	
}

- (id) init;
- (id) initWithUri:(NSString*)anUri;
@end

/**
 * @interface:VoteType
 * @Type:EntityType
 
 * @key:Id* 
 */
@interface MetaModel_VoteType : ODataObject
{
	
	/**
	* @Type:EntityProperty
	* NotNullable
	* @EdmType:Edm.Int32
	*/
	NSNumber *m_Id;
	
	/**
	* @Type:EntityProperty
	* @EdmType:Edm.String
	* @MaxLength:40
	* @FixedLength:false
	*/
	NSString *m_Name;
	
	/**
	* @Type:NavigationProperty
	* @Relationship:VoteVoteType
	* @FromRole:VoteType
	* @ToRole:Vote
	*/
	NSMutableArray *m_Votes;
	
}

@property ( nonatomic , retain , getter=getId , setter=setId )NSNumber *m_Id;
@property ( nonatomic , retain , getter=getName , setter=setName ) NSString *m_Name;
@property ( nonatomic , retain , getter=getVotes , setter=setVotes )NSMutableArray *m_Votes;

+ (id) CreateVoteTypeWithid:(NSNumber *)aId;
- (id) init;
- (id) initWithUri:(NSString*)anUri;
@end


 /**
 * @interface:VoteType
 * @Type:EntityType
 
 */
@interface MetaModel_DeletedVoteType : ODataDeletedObject{
	
}

- (id) init;
- (id) initWithUri:(NSString*)anUri;
@end

/**
 * Container interface Entities, Namespace: MetaModel
 */
@interface Entities : ObjectContext
{
	 NSString *m_OData_etag;
	 DataServiceQuery *m_Badges;
	 DataServiceQuery *m_Comments;
	 DataServiceQuery *m_Posts;
	 DataServiceQuery *m_Tags;
	 DataServiceQuery *m_Users;
	 DataServiceQuery *m_Votes;
	 DataServiceQuery *m_VoteTypes;
	
}

@property ( nonatomic , retain , getter=getEtag , setter=setEtag )NSString *m_OData_etag;
@property ( nonatomic , retain , getter=getBadges , setter=setBadges ) DataServiceQuery *m_Badges;
@property ( nonatomic , retain , getter=getComments , setter=setComments ) DataServiceQuery *m_Comments;
@property ( nonatomic , retain , getter=getPosts , setter=setPosts ) DataServiceQuery *m_Posts;
@property ( nonatomic , retain , getter=getTags , setter=setTags ) DataServiceQuery *m_Tags;
@property ( nonatomic , retain , getter=getUsers , setter=setUsers ) DataServiceQuery *m_Users;
@property ( nonatomic , retain , getter=getVotes , setter=setVotes ) DataServiceQuery *m_Votes;
@property ( nonatomic , retain , getter=getVoteTypes , setter=setVoteTypes ) DataServiceQuery *m_VoteTypes;

- (id) init;
- (id) initWithUri:(NSString*)anUri credential:(id)acredential;
- (id) badges;
- (id) comments;
- (id) posts;
- (id) tags;
- (id) users;
- (id) votes;
- (id) votetypes;
- (void) addToBadges:(id)anObject;
- (void) addToComments:(id)anObject;
- (void) addToPosts:(id)anObject;
- (void) addToTags:(id)anObject;
- (void) addToUsers:(id)anObject;
- (void) addToVotes:(id)anObject;
- (void) addToVoteTypes:(id)anObject;

@end
